service: bill-finance-v1

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  tags:
    project: bill
    environment: ${self:provider.stage}
  stackTags:
    project: bill
    environment: ${self:provider.stage}
  
  environment:
    PLAID_CLIENT_ID: ${env:PLAID_CLIENT_ID, 'placeholder'}
    PLAID_SECRET: ${env:PLAID_SECRET, 'placeholder'}
    PLAID_ENV: ${env:PLAID_ENV, 'sandbox'}
    TRANSACTIONS_TABLE: ${self:service}-${self:provider.stage}-transactions
    RECEIPTS_BUCKET: bill-receipts-1750513800

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TRANSACTIONS_TABLE}"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: "arn:aws:s3:::${self:provider.environment.RECEIPTS_BUCKET}/*"
    - Effect: Allow
      Action:
        - textract:AnalyzeExpense
      Resource: "*"
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "*"

functions:
  syncPlaidTransactions:
    handler: src/handlers/plaidSync.handler
    timeout: 30
    events:
      - schedule: rate(6 hours)
    tags:
      function: plaid-sync
      project: bill

  processReceipt:
    handler: src/handlers/receiptProcessor.handler
    timeout: 60
    events:
      - s3:
          bucket: ${self:provider.environment.RECEIPTS_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
            - suffix: .jpeg
            - suffix: .png
            - suffix: .pdf
    tags:
      function: receipt-processor
      project: bill

  processEmail:
    handler: src/handlers/emailProcessor.handler
    timeout: 30
    tags:
      function: email-processor
      project: bill

  api:
    handler: src/handlers/api.handler
    timeout: 30
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: 
              Fn::GetAtt:
                - CognitoUserPool
                - Arn
    tags:
      function: api
      project: bill

resources:
  Resources:
    TransactionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TRANSACTIONS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        Tags:
          - Key: project
            Value: bill
          - Key: environment
            Value: ${self:provider.stage}

    ReceiptsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: bill-receipts-1750513800
        Tags:
          - Key: project
            Value: bill
          - Key: environment
            Value: ${self:provider.stage}

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
        UserPoolTags:
          project: bill
          environment: ${self:provider.stage}

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:provider.stage}-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
          - USER_PASSWORD_AUTH
        GenerateSecret: false

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js